import unittest
from vfsystem.fsystem import VirtFS
class VFSTestCases(unittest.TestCase):
    def test_file_props(self):
        fs = VirtFS()
        fs.add_file("file1")
        fs.show_status("file1")
        fs.show_status("/")
    def test_dir_overview(self):
        fs = VirtFS()
        fs.add_directory("folder1")
        fs.add_file("file2")
        fs.add_file("../file3")
        fs.add_file("./folder1/file4")
        fs.add_file("/folder1/file5")
        fs.add_file("file6")
        fs.add_link("file2", "./folder1/file23")
        fs.list_dir()
        fs.cd("./folder1")
        fs.list_dir()
    def test_link_func(self):
        fs = VirtFS()
        fs.add_file("file7")
        fs.add_link("file7", "file8")
        fs.show_status("file7")
        fs.add_link("file7", "file8")
        fs.show_status("file7")
        fs.add_link("file8", "file9")
        fs.show_status("file9")
    def test_link_removal(self):
        fs = VirtFS()
        fs.add_file("file10")
        fs.list_dir()
        fs.add_link("file10", "file11")
        fs.list_dir()
        fs.del_link("file10")
        fs.list_dir()
    def test_creation(self):
        fs = VirtFS()
        fs.add_file("file12")
        fs.show_status("file12")
    def test_open_mechanism(self):
        fs = VirtFS()
        fs.add_file("file13")
        fs.open_file("file13")
    def test_close_mechanism(self):
        fs = VirtFS()
        fs.add_file("file14")
        fs.close_file(0)
        fs.open_file("file14")
        fs.close_file(0)
    def test_seek_function(self):
        fs = VirtFS()
        fs.add_file("file15")
        fs.open_file("file15")
        fs.update_offset(0, 3)
        fs.set_size("file15", 7)
        fs.update_offset(0, 3)
    def test_write_process(self):
        fs = VirtFS()
        fs.add_file("file16")
        fs.write_file(0, 8)
        fs.open_file("file16")
        fs.write_file(0, 8)
        fs.set_size("file16", 9)
        fs.write_file(0, 8)
        fs.show_status("file16")
    def test_read_process(self):
        fs = VirtFS()
        fs.add_file("file17")
        fs.set_size("file17", 20)
        fs.open_file("file17")
        fs.update_offset(0, 5)
        fs.write_file(0, 8)
        fs.open_file("file17")
        fs.read_file(1, 20)
    def test_truncate_process(self):
        fs = VirtFS()
        fs.add_file("file18")
        fs.show_status("file18")
        fs.set_size("file18", 10)
        fs.show_status("file18")
    def test_del_directory(self):
        fs = VirtFS()
        fs.add_directory("folder2")
        fs.add_file("./folder2/file19")
        fs.cur_path()
        fs.cd("./folder2")
        fs.cur_path()
        fs.list_dir()
        fs.cd("..")
        fs.del_directory("./folder2")
        fs.del_link("./folder2/file19")
        fs.del_directory("./folder2")
    def test_symlink_creation(self):
        fs = VirtFS()
        fs.add_directory("folder3")
        fs.add_symlink("folder3", "symlink-folder")
        fs.list_dir()
        fs.show_status("symlink-folder")
    def test_invalid_ops(self):
        fs = VirtFS()
        fs.open_file("nonexistent")
        fs.cd("nonexistent")
    def test_multiple_fd(self):
        fs = VirtFS()
        fs.add_file("file20")
        fs.add_file("file21")
        fs.add_file("file22")
        fs.open_file("file20")
        fs.open_file("file21")
        fs.open_file("file22")
        fs.close_file(0)
        fs.close_file(1)
        fs.close_file(2)
if __name__ == '__main__':
    unittest.main()

